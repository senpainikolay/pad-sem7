// protoc --go_out=internal/pb --go_opt=paths=source_relative --go-grpc_out=internal/pb --go-grpc_opt=paths=source_relative internal/proto/police.proto
syntax = "proto3";
package proto;

option go_package = "github.com/senpainikolay/pad-sem7/accident-reporting-service"; 


message GetAccidentUserEntry {
    double user_long  = 1; 
    double user_lat = 2; 
    int64 zoom_index =3; 
    string city = 4; 
}   


message AccidentInfo {  
    double accident_long  = 1; 
    double accident_lat = 2; 
    bool confirmation_accident_notification =3;   
    bool confirmation_police_notification =4;  
    int64 confirmedBy  =5; 

} 

message GetAccidentResponse {  
    repeated AccidentInfo accident_info = 1;
} 


message PostAccidentEntry {
    double accident_long  = 1; 
    double accident_lat = 2; 
    string city = 3;  
    string street_name = 4; 
    int64 cars_involved = 5; 
} 

  

message ConfirmAccidentEntry {
    double accident_long  = 1; 
    double accident_lat = 2; 
    bool police_confirmation =3;  
    bool accident_confirmation=4;
} 

message GenericResponse { 
    bool error =1; 
    string msg = 2; 
}  


message FetchAccidentRequest { GetAccidentUserEntry user_info =1; } 
message PostAccidentRequest { PostAccidentEntry accident_info =1; } 
message ConfirmAccidentRequest { ConfirmAccidentEntry info  =1; } 



service PoliceReportingService {
    rpc FetchAccidents(FetchAccidentRequest) returns (GetAccidentResponse) {}
    rpc PostAccident(PostAccidentRequest) returns (GenericResponse) {}
    rpc ConfirmAccident(ConfirmAccidentRequest) returns (GenericResponse) {}
  }
   

